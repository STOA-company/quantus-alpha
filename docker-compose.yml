services:
    nginx:
        image: nginx:latest
        ports:
            - "80:80"
        volumes:
            - ./nginx.conf:/etc/nginx/nginx.conf:ro
            - ./nginx/conf.d:/etc/nginx/conf.d:ro
        depends_on:
            - web-blue
            # - web-green
        networks:
            - alpha-network

    web-blue:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: web-blue
        expose:
            - "8000"
        env_file:
            - .env.${ENV:-dev}
        environment:
            ENV: ${ENV:-dev}
            REDIS_HOST: redis
            REDIS_PORT: 6379
            APP_NAME: blue
        volumes:
            - .:/app
        depends_on:
            - redis
        networks:
            - alpha-network
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:8000/health-check"]
            interval: 10s
            timeout: 5s
            retries: 3
            start_period: 5s

    web-green:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: web-green
        expose:
            - "8000"
        env_file:
            - .env.${ENV:-dev}
        environment:
            ENV: ${ENV:-dev}
            REDIS_HOST: redis
            REDIS_PORT: 6379
            APP_NAME: green
        volumes:
            - .:/app
        depends_on:
            - redis
        networks:
            - alpha-network
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:8000/health-check"]
            interval: 10s
            timeout: 5s
            retries: 3
            start_period: 5s
        # 초기에는 비활성화 상태로 시작
        profiles: ["manual"]

    redis:
        image: redis:7-alpine
        ports:
            - "6379:6379"
        volumes:
            - redis_data:/data
        command: redis-server --appendonly yes
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 10s
            timeout: 5s
            retries: 5
        networks:
            - alpha-network

volumes:
    redis_data:

networks:
    alpha-network:
        driver: bridge

version: '3.8'  # BuildKit 활성화 위해 버전 명시

services:
    nginx:
        image: nginx:latest
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./nginx.conf:/etc/nginx/nginx.conf:ro
            - ./nginx/conf.d:/etc/nginx/conf.d:ro
            - ./ssl:/etc/nginx/ssl:ro
        depends_on:
            - quantus-alpha-blue
        networks:
            - alpha-network
        restart: unless-stopped

    quantus-alpha-blue:
        image: ghcr.io/${GITHUB_REPOSITORY_OWNER}/quantus-alpha-dev:${IMAGE_TAG:-latest}
        container_name: quantus-alpha-blue
        expose:
            - "8000"
        environment:
            APP_NAME: blue
        volumes:
            - .:/app
            - pip-cache:/root/.cache/pip
            - poetry-cache:/var/cache/poetry
        depends_on:
            redis:
                condition: service_healthy
        networks:
            - alpha-network
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:8000/health-check"]
            interval: 10s
            timeout: 5s
            retries: 3
            start_period: 5s
        restart: unless-stopped

    quantus-alpha-green:
        image: ghcr.io/${GITHUB_REPOSITORY_OWNER}/quantus-alpha-dev:${IMAGE_TAG:-latest}
        container_name: quantus-alpha-green
        expose:
            - "8001"
        environment:
            APP_NAME: green
            LLM_MOCK_ENABLED: "true"
        volumes:
            - .:/app
            - pip-cache:/root/.cache/pip
            - poetry-cache:/var/cache/poetry
        depends_on:
            redis:
                condition: service_healthy
        networks:
            - alpha-network
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:8001/health-check"]
            interval: 10s
            timeout: 5s
            retries: 3
            start_period: 5s
        profiles: ["manual"]
        restart: unless-stopped

    redis:
        image: redis:7-alpine
        ports:
            - "127.0.0.1:6379:6379"
        volumes:
            - redis_data:/data
        command: >
          redis-server
          --requirepass ${REDIS_PASSWORD}
          --appendonly yes
          --protected-mode no
          --replicaof no one
          --rename-command REPLICAOF ""
          --rename-command SLAVEOF ""
          --maxmemory 256mb
          --maxmemory-policy allkeys-lru
          --tcp-keepalive 60
          --timeout 300
        healthcheck:
            test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
            interval: 5s
            timeout: 10s
            retries: 10
            start_period: 5s
        networks:
            - alpha-network
        restart: always
        deploy:
            resources:
                limits:
                    memory: 300M

    zipkin:
        image: openzipkin/zipkin:latest
        container_name: zipkin
        ports:
            - "9411:9411"
        environment:
            - STORAGE_TYPE=mem
        networks:
            - alpha-network
        restart: unless-stopped
        deploy:
            resources:
                limits:
                    memory: 512M

volumes:
    redis_data:
    pip-cache:    # pip 캐시를 위한 볼륨
    poetry-cache: # poetry 캐시를 위한 볼륨

networks:
    alpha-network:
        driver: bridge

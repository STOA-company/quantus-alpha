"""v40

Revision ID: 2d6a81803318
Revises: a7701d63e923
Create Date: 2025-02-12 21:52:32.194874

"""

from typing import Sequence, Union

from sqlalchemy.dialects import mysql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "2d6a81803318"
down_revision: Union[str, None] = "a7701d63e923"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("bookmarks_ibfk_2", "bookmarks", type_="foreignkey")
    op.drop_constraint("bookmarks_ibfk_1", "bookmarks", type_="foreignkey")
    op.create_foreign_key(None, "bookmarks", "alphafinder_user", ["user_id"], ["id"], ondelete="CASCADE")
    op.create_foreign_key(None, "bookmarks", "posts", ["post_id"], ["id"], ondelete="CASCADE")
    op.drop_constraint("comment_likes_ibfk_1", "comment_likes", type_="foreignkey")
    op.drop_constraint("comment_likes_ibfk_2", "comment_likes", type_="foreignkey")
    op.create_foreign_key(None, "comment_likes", "alphafinder_user", ["user_id"], ["id"], ondelete="CASCADE")
    op.create_foreign_key(None, "comment_likes", "comments", ["comment_id"], ["id"], ondelete="CASCADE")
    op.drop_constraint("comments_ibfk_2", "comments", type_="foreignkey")
    op.drop_constraint("comments_ibfk_1", "comments", type_="foreignkey")
    op.create_foreign_key(None, "comments", "comments", ["parent_id"], ["id"], ondelete="CASCADE")
    op.create_foreign_key(None, "comments", "posts", ["post_id"], ["id"], ondelete="CASCADE")
    op.drop_constraint("post_likes_ibfk_1", "post_likes", type_="foreignkey")
    op.drop_constraint("post_likes_ibfk_2", "post_likes", type_="foreignkey")
    op.create_foreign_key(None, "post_likes", "posts", ["post_id"], ["id"], ondelete="CASCADE")
    op.create_foreign_key(None, "post_likes", "alphafinder_user", ["user_id"], ["id"], ondelete="CASCADE")
    op.drop_constraint("post_statistics_ibfk_1", "post_statistics", type_="foreignkey")
    op.create_foreign_key(None, "post_statistics", "posts", ["post_id"], ["id"], ondelete="CASCADE")
    op.alter_column("posts", "category_id", existing_type=mysql.INTEGER(), nullable=True)
    op.drop_constraint("posts_ibfk_1", "posts", type_="foreignkey")
    op.create_foreign_key(None, "posts", "categories", ["category_id"], ["id"], ondelete="SET NULL")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "posts", type_="foreignkey")
    op.create_foreign_key("posts_ibfk_1", "posts", "categories", ["category_id"], ["id"])
    op.alter_column("posts", "category_id", existing_type=mysql.INTEGER(), nullable=False)
    op.drop_constraint(None, "post_statistics", type_="foreignkey")
    op.create_foreign_key("post_statistics_ibfk_1", "post_statistics", "posts", ["post_id"], ["id"])
    op.drop_constraint(None, "post_likes", type_="foreignkey")
    op.drop_constraint(None, "post_likes", type_="foreignkey")
    op.create_foreign_key("post_likes_ibfk_2", "post_likes", "alphafinder_user", ["user_id"], ["id"])
    op.create_foreign_key("post_likes_ibfk_1", "post_likes", "posts", ["post_id"], ["id"])
    op.drop_constraint(None, "comments", type_="foreignkey")
    op.drop_constraint(None, "comments", type_="foreignkey")
    op.create_foreign_key("comments_ibfk_1", "comments", "comments", ["parent_id"], ["id"])
    op.create_foreign_key("comments_ibfk_2", "comments", "posts", ["post_id"], ["id"])
    op.drop_constraint(None, "comment_likes", type_="foreignkey")
    op.drop_constraint(None, "comment_likes", type_="foreignkey")
    op.create_foreign_key("comment_likes_ibfk_2", "comment_likes", "alphafinder_user", ["user_id"], ["id"])
    op.create_foreign_key("comment_likes_ibfk_1", "comment_likes", "comments", ["comment_id"], ["id"])
    op.drop_constraint(None, "bookmarks", type_="foreignkey")
    op.drop_constraint(None, "bookmarks", type_="foreignkey")
    op.create_foreign_key("bookmarks_ibfk_1", "bookmarks", "posts", ["post_id"], ["id"])
    op.create_foreign_key("bookmarks_ibfk_2", "bookmarks", "alphafinder_user", ["user_id"], ["id"])
    # ### end Alembic commands ###

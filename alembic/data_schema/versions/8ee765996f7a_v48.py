"""v48

Revision ID: 8ee765996f7a
Revises: b4c6b8fef696
Create Date: 2025-02-17 18:41:09.836512

"""

from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import mysql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "8ee765996f7a"
down_revision: Union[str, None] = "b4c6b8fef696"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # 1. 컬럼 comment 수정
    op.alter_column(
        "news_analysis",
        "summary",
        existing_type=mysql.TEXT(),
        comment="요약",
        existing_comment="한글 요약",
        existing_nullable=True,
    )
    op.alter_column(
        "news_analysis",
        "impact_reason",
        existing_type=mysql.TEXT(),
        comment="영향 이유",
        existing_comment="한글 영향 이유",
        existing_nullable=True,
    )
    op.alter_column(
        "news_analysis",
        "key_points",
        existing_type=mysql.TEXT(),
        comment="주요 포인트",
        existing_comment="한글 주요 포인트",
        existing_nullable=True,
    )

    # 2. 컬럼 추가/삭제
    op.add_column("news_analysis", sa.Column("lang", sa.String(length=20), nullable=True, comment="언어"))
    op.drop_column("news_analysis", "en_summary")
    op.drop_column("news_analysis", "en_impact_reason")
    op.drop_column("news_analysis", "en_key_points")

    # 3. 기존 인덱스와 constraint 삭제
    op.drop_index("idx_ctry_date", table_name="news_analysis")
    op.drop_index("idx_ticker_ctry", table_name="news_analysis")
    op.drop_constraint("uix_collect_id_ctry", "news_analysis", type_="unique")

    # 4. 새로운 인덱스와 constraint 생성
    op.create_index("idx_ctry_lang_date", "news_analysis", ["ctry", "lang", "date"], unique=False)
    op.create_index("idx_ticker_lang", "news_analysis", ["ticker", "lang"], unique=False)
    op.create_unique_constraint("uix_collect_id_lang", "news_analysis", ["collect_id", "lang"])

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # 1. 삭제된 컬럼 복구
    op.add_column("news_analysis", sa.Column("en_key_points", mysql.TEXT(), nullable=True, comment="영문 주요 포인트"))
    op.add_column("news_analysis", sa.Column("en_impact_reason", mysql.TEXT(), nullable=True, comment="영문 영향 이유"))
    op.add_column("news_analysis", sa.Column("en_summary", mysql.TEXT(), nullable=True, comment="영문 요약"))

    # 2. 신규 인덱스와 constraint 삭제
    op.drop_constraint("uix_collect_id_lang", "news_analysis", type_="unique")
    op.drop_index("idx_ticker_lang", table_name="news_analysis")
    op.drop_index("idx_ctry_lang_date", table_name="news_analysis")

    # 3. 기존 인덱스와 constraint 복구
    op.create_unique_constraint("uix_collect_id_ctry", "news_analysis", ["collect_id", "ctry"])
    op.create_index("idx_ticker_ctry", "news_analysis", ["ticker", "ctry"], unique=False)
    op.create_index("idx_ctry_date", "news_analysis", ["ctry", "date"], unique=False)

    # 4. 컬럼 comment 복구
    op.alter_column(
        "news_analysis",
        "key_points",
        existing_type=mysql.TEXT(),
        comment="한글 주요 포인트",
        existing_comment="주요 포인트",
        existing_nullable=True,
    )
    op.alter_column(
        "news_analysis",
        "impact_reason",
        existing_type=mysql.TEXT(),
        comment="한글 영향 이유",
        existing_comment="영향 이유",
        existing_nullable=True,
    )
    op.alter_column(
        "news_analysis",
        "summary",
        existing_type=mysql.TEXT(),
        comment="한글 요약",
        existing_comment="요약",
        existing_nullable=True,
    )

    # 5. 추가된 컬럼 삭제
    op.drop_column("news_analysis", "lang")
    # ### end Alembic commands ###

"""v39

Revision ID: a7701d63e923
Revises: 9203e1b4c206
Create Date: 2025-02-12 18:31:20.847362

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "a7701d63e923"
down_revision: Union[str, None] = "9203e1b4c206"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "categories",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=20), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
        sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "stock_statistics",
        sa.Column("stock_ticker", sa.String(length=20), nullable=False),
        sa.Column("weekly_post_count", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
        sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
        sa.PrimaryKeyConstraint("stock_ticker"),
    )
    op.create_index(
        "idx_stock_statistics_weekly_posts", "stock_statistics", [sa.text("weekly_post_count DESC")], unique=False
    )
    op.create_table(
        "posts",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=100), nullable=False),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column("image_url", sa.Text(), nullable=True),
        sa.Column("like_count", sa.Integer(), nullable=True),
        sa.Column("comment_count", sa.Integer(), nullable=True),
        sa.Column("category_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
        sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["categories.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["alphafinder_user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("idx_posts_category_id", "posts", ["category_id"], unique=False)
    op.create_index("idx_posts_created_at", "posts", ["created_at"], unique=False)
    op.create_index("idx_posts_like_count", "posts", ["like_count"], unique=False)
    op.create_table(
        "bookmarks",
        sa.Column("post_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
        sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
        sa.ForeignKeyConstraint(
            ["post_id"],
            ["posts.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["alphafinder_user.id"],
        ),
        sa.PrimaryKeyConstraint("post_id", "user_id"),
    )
    op.create_index("idx_bookmarks_user", "bookmarks", ["user_id"], unique=False)
    op.create_table(
        "comments",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column("like_count", sa.Integer(), nullable=True),
        sa.Column("depth", sa.Integer(), nullable=True, comment="댓글 깊이"),
        sa.Column("parent_id", sa.Integer(), nullable=True, comment="부모 댓글 ID"),
        sa.Column("post_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
        sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["comments.id"],
        ),
        sa.ForeignKeyConstraint(
            ["post_id"],
            ["posts.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["alphafinder_user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("idx_comments_depth_parent", "comments", ["depth", "parent_id"], unique=False)
    op.create_index("idx_comments_parent_id", "comments", ["parent_id"], unique=False)
    op.create_index("idx_comments_post_id", "comments", ["post_id"], unique=False)
    op.create_table(
        "post_likes",
        sa.Column("post_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
        sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
        sa.ForeignKeyConstraint(
            ["post_id"],
            ["posts.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["alphafinder_user.id"],
        ),
        sa.PrimaryKeyConstraint("post_id", "user_id"),
    )
    op.create_index("idx_post_likes_user", "post_likes", ["user_id"], unique=False)
    op.create_table(
        "post_statistics",
        sa.Column("post_id", sa.Integer(), nullable=False),
        sa.Column("weekly_likes", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
        sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
        sa.ForeignKeyConstraint(
            ["post_id"],
            ["posts.id"],
        ),
        sa.PrimaryKeyConstraint("post_id"),
    )
    op.create_index("idx_post_statistics_weekly_likes", "post_statistics", [sa.text("weekly_likes DESC")], unique=False)
    op.create_table(
        "post_stocks",
        sa.Column("post_id", sa.Integer(), nullable=False),
        sa.Column("stock_ticker", sa.String(length=20), nullable=False),
        sa.ForeignKeyConstraint(
            ["post_id"],
            ["posts.id"],
        ),
        sa.PrimaryKeyConstraint("post_id", "stock_ticker"),
    )
    op.create_index("idx_post_stocks_stock_ticker", "post_stocks", ["stock_ticker"], unique=False)
    op.create_table(
        "comment_likes",
        sa.Column("comment_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
        sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
        sa.ForeignKeyConstraint(
            ["comment_id"],
            ["comments.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["alphafinder_user.id"],
        ),
        sa.PrimaryKeyConstraint("comment_id", "user_id"),
    )
    op.create_index("idx_comment_likes_user", "comment_likes", ["user_id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("idx_comment_likes_user", table_name="comment_likes")
    op.drop_table("comment_likes")
    op.drop_index("idx_post_stocks_stock_ticker", table_name="post_stocks")
    op.drop_table("post_stocks")
    op.drop_index("idx_post_statistics_weekly_likes", table_name="post_statistics")
    op.drop_table("post_statistics")
    op.drop_index("idx_post_likes_user", table_name="post_likes")
    op.drop_table("post_likes")
    op.drop_index("idx_comments_post_id", table_name="comments")
    op.drop_index("idx_comments_parent_id", table_name="comments")
    op.drop_index("idx_comments_depth_parent", table_name="comments")
    op.drop_table("comments")
    op.drop_index("idx_bookmarks_user", table_name="bookmarks")
    op.drop_table("bookmarks")
    op.drop_index("idx_posts_like_count", table_name="posts")
    op.drop_index("idx_posts_created_at", table_name="posts")
    op.drop_index("idx_posts_category_id", table_name="posts")
    op.drop_table("posts")
    op.drop_index("idx_stock_statistics_weekly_posts", table_name="stock_statistics")
    op.drop_table("stock_statistics")
    op.drop_table("categories")
    # ### end Alembic commands ###

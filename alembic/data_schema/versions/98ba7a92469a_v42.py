"""v42

Revision ID: 98ba7a92469a
Revises: f89618352bf3
Create Date: 2025-02-14 14:42:36.995558

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = "98ba7a92469a"
down_revision: Union[str, None] = "f89618352bf3"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("comment_likes", sa.Column("is_liked", sa.Boolean(), nullable=True, comment="좋아요/싫어요 여부"))
    op.create_index("idx_comments_user_id", "comments", ["user_id"], unique=False)
    op.add_column("post_likes", sa.Column("is_liked", sa.Boolean(), nullable=True, comment="좋아요/싫어요 여부"))
    op.add_column("post_statistics", sa.Column("daily_likes_count", sa.Integer(), nullable=True))
    op.add_column("post_statistics", sa.Column("last_liked_at", sa.DateTime(), nullable=True))
    op.drop_index("idx_post_statistics_weekly_likes", table_name="post_statistics")
    op.create_index(
        "idx_post_statistics_daily_likes", "post_statistics", [sa.text("daily_likes_count DESC")], unique=False
    )
    op.create_index("idx_post_statistics_last_liked", "post_statistics", ["last_liked_at"], unique=False)
    op.drop_column("post_statistics", "weekly_likes")
    op.drop_constraint("post_stocks_ibfk_1", "post_stocks", type_="foreignkey")
    op.create_foreign_key(None, "post_stocks", "posts", ["post_id"], ["id"], ondelete="CASCADE")
    op.create_index("idx_posts_user_id", "posts", ["user_id"], unique=False)
    op.add_column("stock_statistics", sa.Column("daily_post_count", sa.Integer(), nullable=True))
    op.add_column("stock_statistics", sa.Column("last_tagged_at", sa.DateTime(), nullable=True))
    op.drop_index("idx_stock_statistics_weekly_posts", table_name="stock_statistics")
    op.create_index(
        "idx_stock_statistics_daily_posts", "stock_statistics", [sa.text("daily_post_count DESC")], unique=False
    )
    op.create_index("idx_stock_statistics_last_tagged", "stock_statistics", ["last_tagged_at"], unique=False)
    op.drop_column("stock_statistics", "weekly_post_count")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("stock_statistics", sa.Column("weekly_post_count", mysql.INTEGER(), autoincrement=False, nullable=True))
    op.drop_index("idx_stock_statistics_last_tagged", table_name="stock_statistics")
    op.drop_index("idx_stock_statistics_daily_posts", table_name="stock_statistics")
    op.create_index("idx_stock_statistics_weekly_posts", "stock_statistics", ["weekly_post_count"], unique=False)
    op.drop_column("stock_statistics", "last_tagged_at")
    op.drop_column("stock_statistics", "daily_post_count")
    op.drop_index("idx_posts_user_id", table_name="posts")
    op.drop_constraint(None, "post_stocks", type_="foreignkey")
    op.create_foreign_key("post_stocks_ibfk_1", "post_stocks", "posts", ["post_id"], ["id"])
    op.add_column("post_statistics", sa.Column("weekly_likes", mysql.INTEGER(), autoincrement=False, nullable=True))
    op.drop_index("idx_post_statistics_last_liked", table_name="post_statistics")
    op.drop_index("idx_post_statistics_daily_likes", table_name="post_statistics")
    op.create_index("idx_post_statistics_weekly_likes", "post_statistics", ["weekly_likes"], unique=False)
    op.drop_column("post_statistics", "last_liked_at")
    op.drop_column("post_statistics", "daily_likes_count")
    op.drop_column("post_likes", "is_liked")
    op.drop_index("idx_comments_user_id", table_name="comments")
    op.drop_column("comment_likes", "is_liked")
    # ### end Alembic commands ###

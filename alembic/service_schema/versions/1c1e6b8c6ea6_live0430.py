"""empty message

Revision ID: 1c1e6b8c6ea6
Revises: 19d4b9ffd5df
Create Date: 2025-04-30 17:28:06.696870

"""

from ast import Pass
from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import mysql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "1c1e6b8c6ea6"
down_revision: Union[str, None] = "19d4b9ffd5df"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    ### commands auto generated by Alembic - please adjust! ###
    # op.create_table(
    #     "af_post_report_items",
    #     sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
    #     sa.Column("name", sa.String(length=255), nullable=False),
    #     sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
    #     sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
    #     sa.PrimaryKeyConstraint("id"),
    # )
    # op.create_table(
    #     "af_post_reports",
    #     sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
    #     sa.Column("post_id", sa.BigInteger(), nullable=False),
    #     sa.Column("user_id", sa.BigInteger(), nullable=False),
    #     sa.Column("report_id", sa.Integer(), nullable=True),
    #     sa.Column("content", sa.String(length=255), nullable=True),
    #     sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
    #     sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
    #     sa.PrimaryKeyConstraint("id"),
    # )
    # op.create_table(
    #     "alphafinder_interest_group",
    #     sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
    #     sa.Column("name", sa.String(length=100), nullable=False),
    #     sa.Column("user_id", sa.BigInteger(), nullable=False),
    #     sa.Column("order", sa.Integer(), nullable=False),
    #     sa.Column("is_editable", sa.Boolean(), nullable=False),
    #     sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
    #     sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
    #     sa.PrimaryKeyConstraint("id"),
    #     sa.UniqueConstraint("user_id", "name", name="uix_user_id_name"),
    # )
    # op.create_index("idx_user_id_order", "alphafinder_interest_group", ["user_id", "order"], unique=False)
    # op.create_table(
    #     "alphafinder_official_account",
    #     sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
    #     sa.Column("user_id", sa.BigInteger(), nullable=False),
    #     sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
    #     sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
    #     sa.PrimaryKeyConstraint("id"),
    # )
    # op.create_table(
    #     "af_posts",
    #     sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
    #     sa.Column("content", mysql.LONGTEXT(), nullable=False),
    #     sa.Column("image_url", mysql.LONGTEXT(), nullable=True),
    #     sa.Column("image_format", sa.String(length=20), nullable=True),
    #     sa.Column("like_count", sa.Integer(), nullable=False),
    #     sa.Column("comment_count", sa.Integer(), nullable=False),
    #     sa.Column("user_id", sa.BigInteger(), nullable=True),
    #     sa.Column("depth", sa.Integer(), nullable=False, comment="게시글 깊이"),
    #     sa.Column("tagging_post_id", sa.BigInteger(), nullable=True, comment="인용된 게시글 ID"),
    #     sa.Column("is_reported", sa.Boolean(), nullable=False, comment="신고 여부"),
    #     sa.Column("parent_id", sa.BigInteger(), nullable=True, comment="부모 게시글 ID"),
    #     sa.Column("category_id", sa.Integer(), nullable=True),
    #     sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
    #     sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
    #     sa.ForeignKeyConstraint(["category_id"], ["categories.id"], ondelete="SET NULL"),
    #     sa.ForeignKeyConstraint(["parent_id"], ["af_posts.id"], ondelete="CASCADE"),
    #     sa.PrimaryKeyConstraint("id"),
    # )
    # op.create_index("idx_af_posts_category_depth", "af_posts", ["category_id", "depth"], unique=False)
    # op.create_index("idx_af_posts_category_id", "af_posts", ["category_id"], unique=False)
    # op.create_index("idx_af_posts_created_at", "af_posts", ["created_at"], unique=False)
    # op.create_index("idx_af_posts_depth_is_reported", "af_posts", ["depth", "is_reported"], unique=False)
    # op.create_index("idx_af_posts_id_is_reported", "af_posts", ["id", "is_reported"], unique=False)
    # op.create_index("idx_af_posts_like_count", "af_posts", ["like_count"], unique=False)
    # op.create_index("idx_af_posts_parent_id_created_at", "af_posts", ["parent_id", "created_at"], unique=False)
    # op.create_index("idx_af_posts_user_id", "af_posts", ["user_id"], unique=False)
    # op.create_table(
    #     "alphafinder_interest_stock",
    #     sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
    #     sa.Column("group_id", sa.BigInteger(), nullable=True),
    #     sa.Column("ticker", sa.String(length=20), nullable=False),
    #     sa.Column("order", sa.Integer(), nullable=False),
    #     sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
    #     sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
    #     sa.ForeignKeyConstraint(["group_id"], ["alphafinder_interest_group.id"], ondelete="CASCADE"),
    #     sa.PrimaryKeyConstraint("id"),
    #     sa.UniqueConstraint("group_id", "ticker", name="uix_group_id_ticker"),
    # )
    # op.create_index("idx_group_id_order", "alphafinder_interest_stock", ["group_id", "order"], unique=False)
    # op.create_index(
    #     op.f("ix_alphafinder_interest_stock_group_id"), "alphafinder_interest_stock", ["group_id"], unique=False
    # )
    # op.create_table(
    #     "af_bookmarks",
    #     sa.Column("user_id", sa.BigInteger(), nullable=False),
    #     sa.Column("post_id", sa.BigInteger(), nullable=False),
    #     sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
    #     sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
    #     sa.ForeignKeyConstraint(["post_id"], ["af_posts.id"], ondelete="CASCADE"),
    #     sa.PrimaryKeyConstraint("user_id", "post_id"),
    # )
    # op.create_index("idx_af_bookmarks_post_id_user_id", "af_bookmarks", ["post_id", "user_id"], unique=False)
    # op.create_index("idx_af_bookmarks_user", "af_bookmarks", ["user_id"], unique=False)
    # op.create_table(
    #     "af_post_likes",
    #     sa.Column("user_id", sa.BigInteger(), nullable=False),
    #     sa.Column("is_liked", sa.Boolean(), nullable=True, comment="좋아요/싫어요 여부"),
    #     sa.Column("post_id", sa.BigInteger(), nullable=False),
    #     sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
    #     sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
    #     sa.ForeignKeyConstraint(["post_id"], ["af_posts.id"], ondelete="CASCADE"),
    #     sa.PrimaryKeyConstraint("user_id", "post_id"),
    # )
    # op.create_index("idx_af_post_likes_created_at_post_id", "af_post_likes", ["created_at", "post_id"], unique=False)
    # op.create_index("idx_af_post_likes_post_id_user_id", "af_post_likes", ["post_id", "user_id"], unique=False)
    # op.create_index("idx_af_post_likes_user", "af_post_likes", ["user_id"], unique=False)
    # op.create_table(
    #     "af_post_stock_tags",
    #     sa.Column("post_id", sa.BigInteger(), nullable=False),
    #     sa.Column("stock_ticker", sa.String(length=20), nullable=False),
    #     sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
    #     sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
    #     sa.ForeignKeyConstraint(["post_id"], ["af_posts.id"], ondelete="CASCADE"),
    #     sa.PrimaryKeyConstraint("post_id", "stock_ticker"),
    # )
    # op.create_index("idx_af_post_stock_tags_ticker", "af_post_stock_tags", ["stock_ticker"], unique=False)
    # op.create_table(
    #     "chat_conversation",
    #     sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
    #     sa.Column("title", sa.String(length=255), nullable=True),
    #     sa.Column("preview", sa.String(length=255), nullable=True),
    #     sa.Column("user_id", sa.BigInteger(), nullable=False),
    #     sa.Column("latest_job_id", sa.String(length=100), nullable=True),
    #     sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
    #     sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
    #     sa.ForeignKeyConstraint(["user_id"], ["alphafinder_user.id"], ondelete="CASCADE"),
    #     sa.PrimaryKeyConstraint("id"),
    # )
    # op.create_index(op.f("ix_chat_conversation_user_id"), "chat_conversation", ["user_id"], unique=False)
    # op.create_table(
    #     "chat_message",
    #     sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
    #     sa.Column("conversation_id", sa.BigInteger(), nullable=False),
    #     sa.Column("content", sa.Text(), nullable=False),
    #     sa.Column("role", sa.String(length=20), nullable=False),
    #     sa.Column("root_message_id", sa.BigInteger(), nullable=True),
    #     sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
    #     sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
    #     sa.ForeignKeyConstraint(["conversation_id"], ["chat_conversation.id"], ondelete="CASCADE"),
    #     sa.ForeignKeyConstraint(["root_message_id"], ["chat_message.id"], ondelete="CASCADE"),
    #     sa.PrimaryKeyConstraint("id"),
    # )
    # op.create_index(op.f("ix_chat_message_conversation_id"), "chat_message", ["conversation_id"], unique=False)
    # op.create_index(op.f("ix_chat_message_root_message_id"), "chat_message", ["root_message_id"], unique=False)
    # op.create_table(
    #     "chat_feedback",
    #     sa.Column("response_id", sa.BigInteger(), nullable=False),
    #     sa.Column("user_id", sa.BigInteger(), nullable=False),
    #     sa.Column("is_liked", sa.Boolean(), nullable=False),
    #     sa.Column("feedback", sa.String(length=255), nullable=False),
    #     sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
    #     sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
    #     sa.ForeignKeyConstraint(["response_id"], ["chat_message.id"], ondelete="CASCADE"),
    #     sa.ForeignKeyConstraint(["user_id"], ["alphafinder_user.id"], ondelete="CASCADE"),
    #     sa.PrimaryKeyConstraint("response_id"),
    # )
    # op.create_index(op.f("ix_chat_feedback_response_id"), "chat_feedback", ["response_id"], unique=False)
    # op.create_index(op.f("ix_chat_feedback_user_id"), "chat_feedback", ["user_id"], unique=False)
    # op.alter_column(
    #     "alphafinder_user",
    #     "subscription_level",
    #     existing_type=mysql.INTEGER(),
    #     server_default=None,
    #     existing_nullable=True,
    # )
    # op.drop_constraint("bookmarks_ibfk_2", "bookmarks", type_="foreignkey")
    # op.drop_constraint("comment_likes_ibfk_2", "comment_likes", type_="foreignkey")
    # op.drop_constraint("comments_ibfk_3", "comments", type_="foreignkey")
    # op.drop_constraint("post_likes_ibfk_2", "post_likes", type_="foreignkey")
    # op.drop_constraint("posts_ibfk_2", "posts", type_="foreignkey")
    # ### end Alembic commands ###
    pass


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # op.create_foreign_key("posts_ibfk_2", "posts", "alphafinder_user", ["user_id"], ["id"], ondelete="SET NULL")
    # op.create_foreign_key("post_likes_ibfk_2", "post_likes", "alphafinder_user", ["user_id"], ["id"], ondelete="CASCADE")
    # op.create_foreign_key("comments_ibfk_3", "comments", "alphafinder_user", ["user_id"], ["id"], ondelete="SET NULL")
    # op.create_foreign_key(
    #     "comment_likes_ibfk_2", "comment_likes", "alphafinder_user", ["user_id"], ["id"], ondelete="CASCADE"
    # )
    # op.create_foreign_key("bookmarks_ibfk_2", "bookmarks", "alphafinder_user", ["user_id"], ["id"], ondelete="CASCADE")
    # op.alter_column(
    #     "alphafinder_user",
    #     "subscription_level",
    #     existing_type=mysql.INTEGER(),
    #     server_default=sa.text("'1'"),
    #     existing_nullable=True,
    # )
    # op.drop_index(op.f("ix_chat_feedback_user_id"), table_name="chat_feedback")
    # op.drop_index(op.f("ix_chat_feedback_response_id"), table_name="chat_feedback")
    # op.drop_table("chat_feedback")
    # op.drop_index(op.f("ix_chat_message_root_message_id"), table_name="chat_message")
    # op.drop_index(op.f("ix_chat_message_conversation_id"), table_name="chat_message")
    # op.drop_table("chat_message")
    # op.drop_index(op.f("ix_chat_conversation_user_id"), table_name="chat_conversation")
    # op.drop_table("chat_conversation")
    # op.drop_index("idx_af_post_stock_tags_ticker", table_name="af_post_stock_tags")
    # op.drop_table("af_post_stock_tags")
    # op.drop_index("idx_af_post_likes_user", table_name="af_post_likes")
    # op.drop_index("idx_af_post_likes_post_id_user_id", table_name="af_post_likes")
    # op.drop_index("idx_af_post_likes_created_at_post_id", table_name="af_post_likes")
    # op.drop_table("af_post_likes")
    # op.drop_index("idx_af_bookmarks_user", table_name="af_bookmarks")
    # op.drop_index("idx_af_bookmarks_post_id_user_id", table_name="af_bookmarks")
    # op.drop_table("af_bookmarks")
    # op.drop_index(op.f("ix_alphafinder_interest_stock_group_id"), table_name="alphafinder_interest_stock")
    # op.drop_index("idx_group_id_order", table_name="alphafinder_interest_stock")
    # op.drop_table("alphafinder_interest_stock")
    # op.drop_index("idx_af_posts_user_id", table_name="af_posts")
    # op.drop_index("idx_af_posts_parent_id_created_at", table_name="af_posts")
    # op.drop_index("idx_af_posts_like_count", table_name="af_posts")
    # op.drop_index("idx_af_posts_id_is_reported", table_name="af_posts")
    # op.drop_index("idx_af_posts_depth_is_reported", table_name="af_posts")
    # op.drop_index("idx_af_posts_created_at", table_name="af_posts")
    # op.drop_index("idx_af_posts_category_id", table_name="af_posts")
    # op.drop_index("idx_af_posts_category_depth", table_name="af_posts")
    # op.drop_table("af_posts")
    # op.drop_table("alphafinder_official_account")
    # op.drop_index("idx_user_id_order", table_name="alphafinder_interest_group")
    # op.drop_table("alphafinder_interest_group")
    # op.drop_table("af_post_reports")
    # op.drop_table("af_post_report_items")
    pass
    # ### end Alembic commands ###
